{"componentChunkName":"component---src-templates-post-list-tsx","path":"/11","result":{"data":{"site":{"siteMetadata":{"title":"Ulrich Block","author":"Ulrich Block","labels":[{"tag":"react","tech":"React","name":"M12 9.861A2.139 2.139 0 1 0 12 14.139 2.139 2.139 0 1 0 12 9.861zM6.008 16.255l-.472-.12C2.018 15.246 0 13.737 0 11.996s2.018-3.25 5.536-4.139l.472-.119.133.468a23.53 23.53 0 0 0 1.363 3.578l.101.213-.101.213a23.307 23.307 0 0 0-1.363 3.578l-.133.467zM5.317 8.95c-2.674.751-4.315 1.9-4.315 3.046 0 1.145 1.641 2.294 4.315 3.046a24.95 24.95 0 0 1 1.182-3.046A24.752 24.752 0 0 1 5.317 8.95zM17.992 16.255l-.133-.469a23.357 23.357 0 0 0-1.364-3.577l-.101-.213.101-.213a23.42 23.42 0 0 0 1.364-3.578l.133-.468.473.119c3.517.889 5.535 2.398 5.535 4.14s-2.018 3.25-5.535 4.139l-.473.12zm-.491-4.259c.48 1.039.877 2.06 1.182 3.046 2.675-.752 4.315-1.901 4.315-3.046 0-1.146-1.641-2.294-4.315-3.046a24.788 24.788 0 0 1-1.182 3.046zM5.31 8.945l-.133-.467C4.188 4.992 4.488 2.494 6 1.622c1.483-.856 3.864.155 6.359 2.716l.34.349-.34.349a23.552 23.552 0 0 0-2.422 2.967l-.135.193-.235.02a23.657 23.657 0 0 0-3.785.61l-.472.119zm1.896-6.63c-.268 0-.505.058-.705.173-.994.573-1.17 2.565-.485 5.253a25.122 25.122 0 0 1 3.233-.501 24.847 24.847 0 0 1 2.052-2.544c-1.56-1.519-3.037-2.381-4.095-2.381zM16.795 22.677c-.001 0-.001 0 0 0-1.425 0-3.255-1.073-5.154-3.023l-.34-.349.34-.349a23.53 23.53 0 0 0 2.421-2.968l.135-.193.234-.02a23.63 23.63 0 0 0 3.787-.609l.472-.119.134.468c.987 3.484.688 5.983-.824 6.854a2.38 2.38 0 0 1-1.205.308zm-4.096-3.381c1.56 1.519 3.037 2.381 4.095 2.381h.001c.267 0 .505-.058.704-.173.994-.573 1.171-2.566.485-5.254a25.02 25.02 0 0 1-3.234.501 24.674 24.674 0 0 1-2.051 2.545zM18.69 8.945l-.472-.119a23.479 23.479 0 0 0-3.787-.61l-.234-.02-.135-.193a23.414 23.414 0 0 0-2.421-2.967l-.34-.349.34-.349C14.135 1.778 16.515.767 18 1.622c1.512.872 1.812 3.37.824 6.855l-.134.468zM14.75 7.24c1.142.104 2.227.273 3.234.501.686-2.688.509-4.68-.485-5.253-.988-.571-2.845.304-4.8 2.208A24.849 24.849 0 0 1 14.75 7.24zM7.206 22.677A2.38 2.38 0 0 1 6 22.369c-1.512-.871-1.812-3.369-.823-6.854l.132-.468.472.119c1.155.291 2.429.496 3.785.609l.235.02.134.193a23.596 23.596 0 0 0 2.422 2.968l.34.349-.34.349c-1.898 1.95-3.728 3.023-5.151 3.023zm-1.19-6.427c-.686 2.688-.509 4.681.485 5.254.987.563 2.843-.305 4.8-2.208a24.998 24.998 0 0 1-2.052-2.545 24.976 24.976 0 0 1-3.233-.501zM12 16.878c-.823 0-1.669-.036-2.516-.106l-.235-.02-.135-.193a30.388 30.388 0 0 1-1.35-2.122 30.354 30.354 0 0 1-1.166-2.228l-.1-.213.1-.213a30.3 30.3 0 0 1 1.166-2.228c.414-.716.869-1.43 1.35-2.122l.135-.193.235-.02a29.785 29.785 0 0 1 5.033 0l.234.02.134.193a30.006 30.006 0 0 1 2.517 4.35l.101.213-.101.213a29.6 29.6 0 0 1-2.517 4.35l-.134.193-.234.02c-.847.07-1.694.106-2.517.106zm-2.197-1.084c1.48.111 2.914.111 4.395 0a29.006 29.006 0 0 0 2.196-3.798 28.585 28.585 0 0 0-2.197-3.798 29.031 29.031 0 0 0-4.394 0 28.477 28.477 0 0 0-2.197 3.798 29.114 29.114 0 0 0 2.197 3.798z","size":20,"color":"deepskyblue","viewBox":null},{"tag":"nodejs","tech":"Node.js","name":"M11.177 25.3a1.94 1.94 0 0 1-.969-.259l-3.086-1.826c-.46-.257-.235-.349-.083-.402.614-.213.739-.262 1.394-.635.069-.038.159-.024.231.018l2.37 1.407a.304.304 0 0 0 .287 0l9.241-5.333a.292.292 0 0 0 .141-.25V7.355a.3.3 0 0 0-.143-.255l-9.237-5.329a.29.29 0 0 0-.285 0L1.803 7.102a.296.296 0 0 0-.146.253v10.666c0 .102.056.198.145.247l2.532 1.462c1.374.687 2.215-.122 2.215-.935V8.265c0-.149.12-.266.269-.266H7.99c.146 0 .267.117.267.266v10.53c0 1.833-.998 2.885-2.736 2.885-.534 0-.955 0-2.129-.579L.969 19.706A1.953 1.953 0 0 1 0 18.02V7.355c0-.693.371-1.339.969-1.684l9.242-5.34a2.023 2.023 0 0 1 1.942 0l9.241 5.34c.599.346.971.992.971 1.684V18.02c0 .693-.372 1.337-.971 1.686l-9.241 5.335a1.942 1.942 0 0 1-.973.259zm2.855-7.348c-4.045 0-4.892-1.857-4.892-3.414 0-.148.118-.266.266-.266h1.195c.133 0 .245.096.265.226.18 1.216.717 1.831 3.164 1.831 1.946 0 2.775-.441 2.775-1.473 0-.596-.234-1.037-3.26-1.334-2.528-.25-4.093-.809-4.093-2.831 0-1.865 1.572-2.977 4.207-2.977 2.961 0 4.425 1.027 4.611 3.233a.27.27 0 0 1-.267.291h-1.2a.266.266 0 0 1-.259-.209c-.288-1.28-.988-1.689-2.886-1.689-2.126 0-2.373.74-2.373 1.295 0 .673.292.869 3.161 1.248 2.84.375 4.19.907 4.19 2.902 0 2.014-1.678 3.167-4.606 3.167z","size":20,"color":"lightgreen","viewBox":"0 0 24 24"},{"tag":"git","tech":"Git","name":"M23.546 10.93L13.067.452c-.604-.603-1.582-.603-2.188 0L8.708 2.627l2.76 2.76c.645-.215 1.379-.07 1.889.441.516.515.658 1.258.438 1.9l2.658 2.66c.645-.223 1.387-.078 1.9.435.721.72.721 1.884 0 2.604-.719.719-1.881.719-2.6 0-.539-.541-.674-1.337-.404-1.996L12.86 8.955v6.525c.176.086.342.203.488.348.713.721.713 1.883 0 2.6-.719.721-1.889.721-2.609 0-.719-.719-.719-1.879 0-2.598.182-.18.387-.316.605-.406V8.835c-.217-.091-.424-.222-.6-.401-.545-.545-.676-1.342-.396-2.009L7.636 3.7.45 10.881c-.6.605-.6 1.584 0 2.189l10.48 10.477c.604.604 1.582.604 2.186 0l10.43-10.43c.605-.603.605-1.582 0-2.187","size":20,"color":"white","viewBox":"0 0 24 24"},{"tag":"github","tech":"GitHub","name":"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z","size":20,"color":"white","viewBox":"0 0 16 15"},{"tag":"javascript","tech":"JavaScript","name":"M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z","size":20,"color":"yellow","viewBox":"0 0 24 24"},{"tag":"typescript","tech":"TypeScript","name":"M87.7 200.7V217h52v148h36.9V217h52v-16c0-9 0-16.3-.4-16.5 0-.3-31.7-.4-70.2-.4l-70 .3v16.4l-.3-.1zM321.4 184c10.2 2.4 18 7 25 14.3 3.7 4 9.2 11 9.6 12.8 0 .6-17.3 12.3-27.8 18.8-.4.3-2-1.4-3.6-4-5.2-7.4-10.5-10.6-18.8-11.2-12-.8-20 5.5-20 16 0 3.2.6 5 1.8 7.6 2.7 5.5 7.7 8.8 23.2 15.6 28.6 12.3 41 20.4 48.5 32 8.5 13 10.4 33.4 4.7 48.7-6.4 16.7-22 28-44.3 31.7-7 1.2-23 1-30.5-.3-16-3-31.3-11-40.7-21.3-3.7-4-10.8-14.7-10.4-15.4l3.8-2.4 15-8.7 11.3-6.6 2.6 3.5c3.3 5.2 10.7 12.2 15 14.6 13 6.7 30.4 5.8 39-2 3.7-3.4 5.3-7 5.3-12 0-4.6-.7-6.7-3-10.2-3.2-4.4-9.6-8-27.6-16-20.7-8.8-29.5-14.4-37.7-23-4.7-5.2-9-13.3-11-20-1.5-5.8-2-20-.6-25.7 4.3-20 19.4-34 41-38 7-1.4 23.5-.8 30.4 1l-.2.2z","size":20,"color":"white","viewBox":"0 50 400 300"},{"tag":"css","tech":"CSS","name":"M1.5 0h21l-1.91 21.563L11.977 24l-8.565-2.438L1.5 0zm17.09 4.413L5.41 4.41l.213 2.622 10.125.002-.255 2.716h-6.64l.24 2.573h6.182l-.366 3.523-2.91.804-2.956-.81-.188-2.11h-2.61l.29 3.855L12 19.288l5.373-1.53L18.59 4.414z","size":20,"color":"teal","viewBox":"0 0 24 24"},{"tag":"python","tech":"Python","name":"M14.31.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.83l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.23l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05L0 11.97l.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.24l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05 1.07.13zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09-.33.22zM21.1 6.11l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01.21.03zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08-.33.23z","size":20,"color":"deepskyblue","viewBox":null},{"tag":"ruby","tech":"Ruby","name":"M20.156.083c3.033.525 3.893 2.598 3.829 4.77L24 4.822 22.635 22.71 4.89 23.926h.016C3.433 23.864.15 23.729 0 19.139l1.645-3 2.819 6.586.503 1.172 2.805-9.144-.03.007.016-.03 9.255 2.956-1.396-5.431-.99-3.9 8.82-.569-.615-.51L16.5 2.114 20.159.073l-.003.01zM0 19.089v.026-.029.003zM5.13 5.073c3.561-3.533 8.157-5.621 9.922-3.84 1.762 1.777-.105 6.105-3.673 9.636-3.563 3.532-8.103 5.734-9.864 3.957-1.766-1.777.045-6.217 3.612-9.75l.003-.003z","size":20,"color":"crimson","viewBox":null},{"tag":"java","tech":"Java","name":"M8.851 18.56s-.917.534.653.714c1.902.218 2.874.187 4.969-.211 0 0 .552.346 1.321.646-4.699 2.013-10.633-.118-6.943-1.149M8.276 15.933s-1.028.761.542.924c2.032.209 3.636.227 6.413-.308 0 0 .384.389.987.602-5.679 1.661-12.007.13-7.942-1.218M13.116 11.475c1.158 1.333-.304 2.533-.304 2.533s2.939-1.518 1.589-3.418c-1.261-1.772-2.228-2.652 3.007-5.688 0-.001-8.216 2.051-4.292 6.573M19.33 20.504s.679.559-.747.991c-2.712.822-11.288 1.069-13.669.033-.856-.373.75-.89 1.254-.998.527-.114.828-.093.828-.093-.953-.671-6.156 1.317-2.643 1.887 9.58 1.553 17.462-.7 14.977-1.82M9.292 13.21s-4.362 1.036-1.544 1.412c1.189.159 3.561.123 5.77-.062 1.806-.152 3.618-.477 3.618-.477s-.637.272-1.098.587c-4.429 1.165-12.986.623-10.522-.568 2.082-1.006 3.776-.892 3.776-.892M17.116 17.584c4.503-2.34 2.421-4.589.968-4.285-.355.074-.515.138-.515.138s.132-.207.385-.297c2.875-1.011 5.086 2.981-.928 4.562 0-.001.07-.062.09-.118M14.401 0s2.494 2.494-2.365 6.33c-3.896 3.077-.888 4.832-.001 6.836-2.274-2.053-3.943-3.858-2.824-5.539 1.644-2.469 6.197-3.665 5.19-7.627M9.734 23.924c4.322.277 10.959-.153 11.116-2.198 0 0-.302.775-3.572 1.391-3.688.694-8.239.613-10.937.168 0-.001.553.457 3.393.639","size":20,"color":"wheat","viewBox":null},{"tag":"angular","tech":"Angular","name":"M9.93 12.645h4.134L11.996 7.74M11.996.009L.686 3.988l1.725 14.76 9.585 5.243 9.588-5.238L23.308 3.99 11.996.01zm7.058 18.297h-2.636l-1.42-3.501H8.995l-1.42 3.501H4.937l7.06-15.648 7.057 15.648z","size":20,"color":"red","viewBox":null},{"tag":"html","tech":"HTML","name":"M1.5 0h21l-1.91 21.563L11.977 24l-8.564-2.438L1.5 0zm7.031 9.75l-.232-2.718 10.059.003.23-2.622L5.412 4.41l.698 8.01h9.126l-.326 3.426-2.91.804-2.955-.81-.188-2.11H6.248l.33 4.171L12 19.351l5.379-1.443.744-8.157H8.531z","size":20,"color":"darkorange","viewBox":"0 0 24 24"},{"tag":"php","tech":"PHP","name":"M7.01 10.207h-.944l-.515 2.648h.838c.556 0 .97-.105 1.242-.314.272-.21.455-.559.55-1.049.092-.47.05-.802-.124-.995-.175-.193-.523-.29-1.047-.29zM12 5.688C5.373 5.688 0 8.514 0 12s5.373 6.313 12 6.313S24 15.486 24 12c0-3.486-5.373-6.312-12-6.312zm-3.26 7.451c-.261.25-.575.438-.917.551-.336.108-.765.164-1.285.164H5.357l-.327 1.681H3.652l1.23-6.326h2.65c.797 0 1.378.209 1.744.628.366.418.476 1.002.33 1.752a2.836 2.836 0 0 1-.305.847c-.143.255-.33.49-.561.703zm4.024.715l.543-2.799c.063-.318.039-.536-.068-.651-.107-.116-.336-.174-.687-.174H11.46l-.704 3.625H9.388l1.23-6.327h1.367l-.327 1.682h1.218c.767 0 1.295.134 1.586.401s.378.7.263 1.299l-.572 2.944h-1.389zm7.597-2.265a2.782 2.782 0 0 1-.305.847c-.143.255-.33.49-.561.703a2.44 2.44 0 0 1-.917.551c-.336.108-.765.164-1.286.164h-1.18l-.327 1.682h-1.378l1.23-6.326h2.649c.797 0 1.378.209 1.744.628.366.417.477 1.001.331 1.751zM17.766 10.207h-.943l-.516 2.648h.838c.557 0 .971-.105 1.242-.314.272-.21.455-.559.551-1.049.092-.47.049-.802-.125-.995s-.524-.29-1.047-.29z","size":20,"color":"violet","viewBox":"0 0 24 24"},{"tag":"mongodb","tech":"MongoDB","name":"M17.18 9.518c-1.263-5.56-4.242-7.387-4.562-8.086C12.266.939 11.885 0 11.885 0c-.002.019-.004.031-.005.049v.013h-.001c-.002.015-.003.025-.004.039v.015h-.002c0 .01-.002.018-.002.026v.026h-.003c-.001.008-.001.018-.003.025v.021h-.002c0 .007 0 .015-.002.021v.02h-.002c0 .01-.001.022-.002.032v.002c-.003.017-.006.034-.009.05v.008h-.002c-.001.004-.003.008-.003.012v.017h-.003v.022h-.005v.018h-.005v.021h-.004v.019h-.004v.017h-.006v.014h-.004v.018h-.004v.014h-.005v.013H11.8v.015h-.004c-.001.001-.001.003-.001.004v.01h-.003c-.001.002-.001.004-.001.006v.006h-.002c-.001.003-.002.008-.002.01-.003.007-.007.014-.01.021v.002c-.002.002-.004.005-.005.007v.008h-.004v.008h-.005v.008h-.003v.01h-.006v.014h-.004v.004h-.004v.008h-.004v.011h-.004v.008h-.006v.011h-.004v.008h-.005v.008h-.003v.01h-.005v.008h-.004v.006h-.004v.008h-.006V.76h-.004v.006h-.005v.008h-.004v.011h-.005v.004h-.003v.008h-.006v.004h-.004v.01h-.004v.004h-.004v.008h-.005v.006h-.003l-.002.004v.004h-.002c-.001.002-.002.002-.002.004v.001h-.001c-.001.003-.002.005-.004.007v.003h-.001c-.005.006-.008.012-.012.018v.001c-.002.002-.007.006-.009.01v.002h-.001c-.001.001-.003.002-.003.003v.003h-.002l-.003.003v.001h-.001c0 .001-.002.002-.003.004v.004h-.003l-.002.002v.002h-.002c0 .002-.002.002-.002.003v.003h-.004c0 .001-.001.002-.002.003V.92h-.003v.004h-.004V.93h-.004v.008h-.005V.93h-.005v.004h-.004V.94h-.005v.008h-.005v.004h-.004v.006h-.004v.004h-.004V.97h-.006v.004h-.004V.98h-.005v.004h-.004v.005h-.005v.01h-.002v.004h-.006v.005h-.004v.002h-.004v.004h-.005v.01h-.004v.004h-.005v.004h-.004v.006h-.005v.004h-.005v.004h-.004v.004h-.004v.01h-.004v.005h-.006v.004h-.004v.004h-.005v.006h-.004v.004h-.005v.007h-.004v.004h-.006V1.1h-.002v.004h-.004v.004h-.005v.004h-.004v.006h-.005v.004h-.003c-.001.001-.001.002-.001.002v.002h-.002l-.004.004s-.002.002-.004.003v.006h-.004v.005h-.004v.004h-.004v.004h-.003l-.003.003v.003h-.002l-.002.002v.003h-.002c-.005.006-.007.01-.014.016-.002.002-.008.007-.012.01-.012.008-.027.021-.039.032-.008.005-.016.012-.022.017v.001h-.001c-.016.013-.031.025-.049.039v.001c-.024.02-.047.039-.074.062V1.34h-.002c-.057.047-.117.1-.186.159V1.5h-.001c-.169.148-.37.338-.595.568l-.015.015-.004.004C9 3.494 6.857 6.426 6.631 11.164c-.02.392-.016.773.006 1.144v.009c.109 1.867.695 3.461 1.428 4.756v.001c.292.516.607.985.926 1.405v.001c1.102 1.455 2.227 2.317 2.514 2.526.441 1.023.4 2.779.4 2.779l.644.215s-.131-1.701.053-2.522c.057-.257.192-.476.349-.662.106-.075.42-.301.797-.645.018-.019.028-.036.044-.054 1.521-1.418 4.362-4.91 3.388-10.599z","size":20,"color":"green","viewBox":null},{"tag":"vscode","tech":"VS Code","name":"M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z","size":20,"color":"deepskyblue","viewBox":"0 0 24 24"},{"tag":"wordpress","tech":"Wordpress","name":"m5.8465 1.9131c0.57932 0 1.1068 0.222 1.5022 0.58547-0.1938-0.0052-0.3872 0.11-0.3952 0.3738-0.0163 0.5333 0.6377 0.6469 0.2853 1.7196l-0.2915 0.8873-0.7939-2.3386c-0.0123-0.0362 0.002-0.0568 0.0465-0.0568h0.22445c0.011665 0 0.021201-0.00996 0.021201-0.022158v-0.13294c0-0.012193-0.00956-0.022657-0.021201-0.022153-0.42505 0.018587-0.8476 0.018713-1.2676 0-0.0117-0.0005-0.0212 0.01-0.0212 0.0222v0.13294c0 0.012185 0.00954 0.022158 0.021201 0.022158h0.22568c0.050201 0 0.064256 0.016728 0.076091 0.049087l0.3262 0.8921-0.4907 1.4817-0.8066-2.3758c-0.01-0.0298 0.0021-0.0471 0.0308-0.0471h0.25715c0.011661 0 0.021197-0.00996 0.021197-0.022158v-0.13294c0-0.012193-0.00957-0.022764-0.021197-0.022153-0.2698 0.014331-0.54063 0.017213-0.79291 0.019803 0.39589-0.60984 1.0828-1.0134 1.8639-1.0134l-0.0000029-0.0000062zm1.9532 1.1633c0.17065 0.31441 0.26755 0.67464 0.26755 1.0574 0 0.84005-0.46675 1.5712-1.1549 1.9486l0.6926-1.9617c0.1073-0.3036 0.2069-0.7139 0.1947-1.0443h-0.000004zm-1.2097 3.1504c-0.2325 0.0827-0.4827 0.1278-0.7435 0.1278-0.2247 0-0.4415-0.0335-0.6459-0.0955l0.68415-1.9606 0.70524 1.9284v-1e-7zm-1.6938-0.0854c-0.75101-0.35617-1.2705-1.1213-1.2705-2.0075 0-0.32852 0.071465-0.64038 0.19955-0.92096l1.071 2.9285 0.000003-0.000003zm0.95023-4.4367c1.3413 0 2.4291 1.0878 2.4291 2.4291s-1.0878 2.4291-2.4291 2.4291-2.4291-1.0878-2.4291-2.4291 1.0878-2.4291 2.4291-2.4291zm0-0.15354c1.4261 0 2.5827 1.1566 2.5827 2.5827s-1.1566 2.5827-2.5827 2.5827-2.5827-1.1566-2.5827-2.5827 1.1566-2.5827 2.5827-2.5827z","size":20,"color":"green","viewBox":"3.5 1.5 5 5"},{"tag":"graphql","tech":"GraphQL","name":"M14.051 2.751l4.935 2.85c.816-.859 2.173-.893 3.032-.077.148.14.274.301.377.477.589 1.028.232 2.339-.796 2.928-.174.1-.361.175-.558.223v5.699c1.146.273 1.854 1.423 1.58 2.569-.048.204-.127.4-.232.581-.592 1.023-1.901 1.374-2.927.782-.196-.113-.375-.259-.526-.429l-4.905 2.832c.372 1.124-.238 2.335-1.361 2.706-.217.071-.442.108-.67.108-1.181.001-2.139-.955-2.14-2.136 0-.205.029-.41.088-.609l-4.936-2.847c-.816.854-2.171.887-3.026.07-.854-.816-.886-2.171-.07-3.026.283-.297.646-.506 1.044-.603l.001-5.699c-1.15-.276-1.858-1.433-1.581-2.584.047-.198.123-.389.224-.566.592-1.024 1.902-1.374 2.927-.782.177.101.339.228.48.377l4.938-2.85C9.613 1.612 10.26.423 11.39.088 11.587.029 11.794 0 12 0c1.181-.001 2.139.954 2.14 2.134.001.209-.03.418-.089.617zm-.515.877c-.019.021-.037.039-.058.058l6.461 11.19c.026-.009.056-.016.082-.023V9.146c-1.145-.283-1.842-1.442-1.558-2.588.006-.024.012-.049.019-.072l-4.946-2.858zm-3.015.059l-.06-.06-4.946 2.852c.327 1.135-.327 2.318-1.461 2.645-.026.008-.051.014-.076.021v5.708l.084.023 6.461-11.19-.002.001zm2.076.507c-.39.112-.803.112-1.192 0l-6.46 11.189c.294.283.502.645.6 1.041h12.911c.097-.398.307-.761.603-1.044L12.597 4.194zm.986 16.227l4.913-2.838c-.015-.047-.027-.094-.038-.142H5.542l-.021.083 4.939 2.852c.388-.404.934-.653 1.54-.653.627 0 1.19.269 1.583.698z","size":20,"color":"hotpink","viewBox":"0 0 24 24"},{"tag":"gatsby","tech":"Gatsby","name":"M12.001.007C5.326.007.007 5.326.007 12S5.326 23.995 12 23.995s11.994-5.319 11.994-11.994S18.676.007 12.001.007zM2.614 12.105l9.283 9.283c-5.111 0-9.283-4.172-9.283-9.283zm11.473 9.074L2.823 9.915C3.76 5.743 7.516 2.614 12 2.614a9.476 9.476 0 0 1 7.614 3.86L18.259 7.62a7.657 7.657 0 0 0-6.362-3.337A7.555 7.555 0 0 0 4.7 9.393l9.804 9.805c2.4-.835 4.276-2.92 4.798-5.424h-4.068v-1.773h6.154c0 4.485-3.129 8.24-7.301 9.178z","size":20,"color":"rebeccapurple","viewBox":"0 0 24 24"},{"tag":"steam","tech":"Steam","name":"m110.5 87.322c0 0.196 0 0.392 0.01 0.576l-28.508 41.412c-4.618-0.21-9.252 0.6-13.646 2.41-1.937 0.79-3.752 1.76-5.455 2.88l-62.599-25.77c0.00049 0-1.4485 23.83 4.588 41.59l44.254 18.26c2.222 9.93 9.034 18.64 19.084 22.83 16.443 6.87 35.402-0.96 42.242-17.41 1.78-4.3 2.61-8.81 2.49-13.31l40.79-29.15c0.33 0.01 0.67 0.02 1 0.02 24.41 0 44.25-19.9 44.25-44.338 0-24.44-19.84-44.322-44.25-44.322-24.4 0-44.25 19.882-44.25 44.322zm-6.84 83.918c-5.294 12.71-19.9 18.74-32.596 13.45-5.857-2.44-10.279-6.91-12.83-12.24l14.405 5.97c9.363 3.9 20.105-0.54 23.997-9.9 3.904-9.37-0.525-20.13-9.883-24.03l-14.891-6.17c5.746-2.18 12.278-2.26 18.381 0.28 6.153 2.56 10.927 7.38 13.457 13.54s2.52 12.96-0.04 19.1m51.09-54.38c-16.25 0-29.48-13.25-29.48-29.538 0-16.275 13.23-29.529 29.48-29.529 16.26 0 29.49 13.254 29.49 29.529 0 16.288-13.23 29.538-29.49 29.538m-22.09-29.583c0-12.253 9.92-22.191 22.14-22.191 12.23 0 22.15 9.938 22.15 22.191 0 12.254-9.92 22.183-22.15 22.183-12.22 0-22.14-9.929-22.14-22.183z","size":20,"color":"white","viewBox":"10 20 199 199"},{"tag":"nginx","tech":"Nginx","name":"M22.73015,49.008a3.59488,3.59488,0,0,1-7.18976,0l.00088.00088.00349-24.67727c0-1.91174,1.68924-3.49279,4.08175-3.49279a6.39282,6.39282,0,0,1,4.90021,2.191L25.613,24.32989,40.63124,42.30253V24.432H40.6295a3.59488,3.59488,0,0,1,7.18975,0h-.00087l-.00349,24.67552c0,1.91175-1.69011,3.49279-4.08175,3.49279a6.38857,6.38857,0,0,1-4.90021-2.191L22.7284,31.13659V49.0089Z","size":20,"color":"white","viewBox":"10 15 45 45"},{"tag":"bash","tech":"Bash","name":"","size":20,"color":"white","viewBox":"10 20 199 199"},{"tag":"game-server","tech":"Game Server","name":"","size":20,"color":"white","viewBox":"10 20 199 199"},{"tag":"security","tech":"Security","name":"","size":20,"color":"white","viewBox":"10 20 199 199"},{"tag":"spam","tech":"Spam","name":"","size":20,"color":"white","viewBox":"10 20 199 199"},{"tag":"sql","tech":"SQL","name":"","size":20,"color":"white","viewBox":"10 20 199 199"}]}},"allMarkdownRemark":{"totalCount":278,"edges":[{"node":{"excerpt":"Die Grundregel, dass man keinem Userinput vertrauen soll, wird jedem ein Begriff sein. Zum Validieren habe ich mir nun folgendes Konzept überlegt: Im ersten Schritt werden die Superglobals in ein…","html":"<p>Die Grundregel, dass man keinem Userinput vertrauen soll, wird jedem ein Begriff sein.</p>\n<p>Zum Validieren habe ich mir nun folgendes Konzept überlegt:<br>\nIm ersten Schritt werden die Superglobals in ein Object übergeben und dabei escaped. Nach der Übergabe werden die Superglobals gelöscht, da ihr Inhalt nicht mehr benötigt wird.</p>\n<p>Im folgenden kann der vorherige Inhalt der Superglobals zusammen mit einer Funktion aufgerufen werden, die den Inhalt überprüft. Nur wenn die Überprüfung erfolgreich war, wird der Wert zurückgegeben.</p>\n<p>Bei dem Aufruf der Funktion gibt man an, welchen Key aus welcher Superglobal erwünscht ist. Wenn die Funktion auch auf Länge überprüfen kann, dann muss man auch noch die Länge angegeben werden.<br>\nMit dem ersten Wert sagt man, welcher Key gewünscht ist, mit dem zweiten Wert sagt man, von welcher der vorherigen Superglobals der Wert genommen werden soll.</p>\n<p>Für den produktiven Einsatz braucht man sicher noch mehr Funktionen. Als Ausgangscode ist die Klasse sicher gut zu gebrauchen:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token operator\">&lt;</span> <span class=\"token operator\">?</span>php\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ValidateUserinput</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$get</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$post</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$server</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$cookie</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$request</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$env</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// Wenn die Magic Quotes nicht zum escapen eingesetzt werden, dann mit addcslashes escapen</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">magic_quotes</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">function_exists</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get_magic_quotes_gpc'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token function\">get_magic_quotes_gpc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token variable\">$value</span><span class=\"token operator\">=</span><span class=\"token function\">addcslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">inputsecurity</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$what</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\t\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$what</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">magic_quotes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$what</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inputsecurity</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$what</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// Constructor</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$get</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$server</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$cookie</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$env</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$get</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">magic_quotes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inputsecurity</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'get'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$post</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">post</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">magic_quotes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">post</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inputsecurity</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'post'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$server</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">server</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">magic_quotes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">server</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inputsecurity</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$cookie</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">cookie</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">magic_quotes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">cookie</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inputsecurity</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'cookie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">magic_quotes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inputsecurity</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'request'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">env</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">magic_quotes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">env</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">inputsecurity</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'env'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// Destructor</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">get</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">post</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">server</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">cookie</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">reques</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">env</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// Url Filter</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">url</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter_var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token constant\">FILTER_VALIDATE_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// Mail Filter</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ismail</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter_var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token constant\">FILTER_VALIDATE_EMAIL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// IP4 Adressen</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ip4</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter_var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILTER_VALIDATE_IP</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILTER_FLAG_IPV4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// IP 6 Adressen</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ip6</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter_var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILTER_VALIDATE_IP</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILTER_FLAG_IPV6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// IP4 und IP6 Adressen</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ip</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter_var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILTER_VALIDATE_IP</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// Serverport</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">port</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))$/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// A-Z, a-z und 0-9 sind in beliebiger Anordnung mit einer maximalen Stringlänge erlaubt.</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">pregw</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$length</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^[\\w]{1,<span class=\"token interpolation\"><span class=\"token variable\">$length</span></span>}$/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// Gibt den Wert ohne Inputüberprüfung zurück.</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">escaped</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$type</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$check</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Die Superglobals leeren, nachdem sie in das Object übergeben worden sind.</span>\n<span class=\"token variable\">$ui</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidateUserinput</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_ENV</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_ENV</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Ab hier würde dann der restliche PHP Code beginnen.</span>\n<span class=\"token comment\">// Die einzelnen Werte werden dadurch aufgerufen, dass man mit der Funktion bestimmt, auf was der Wert überprüft werden soll.</span>\n<span class=\"token comment\">// Mit dem ersten Wert sagt man, welcher Key gewünscht ist, mit dem zweiten Wert sagt man, von welcher der vorherigen Superglobals der Wert genommen werden soll.</span>\n<span class=\"token comment\">// Bei dem Beispielaufruf datei.php?w=test würde test ausgegeben werden</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ui</span><span class=\"token operator\">-></span><span class=\"token function\">escaped</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'get'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$ui</span><span class=\"token operator\">-></span><span class=\"token function\">escaped</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'get'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Nicht validiert'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"a5c69548-ec88-53bc-9ce5-1e0f5af646e7","frontmatter":{"title":"Userinput validieren mittels PHP Klasse","date":"2012-01-10","tags":["php"]},"fields":{"slug":"/userinput-validieren-mittels-php-klasse/"},"timeToRead":3}},{"node":{"excerpt":"$_SERVER ist eine so genannte Superglobal und enthält Informationen, wie die Sprache des Users und Daten zu der aufgerufenen Datei. Mit folgendem Code kann man sich den gesamten Inhalt samt Keys…","html":"<p>$_SERVER ist eine so genannte <a href=\"http://www.php.net/manual/de/language.variables.superglobals.php\" target=\"_blank\" rel=\"external noopener noreferrer\">Superglobal</a> und enthält Informationen, wie die Sprache des Users und Daten zu der aufgerufenen Datei.</p>\n<p>Mit folgendem Code kann man sich den gesamten Inhalt samt Keys auflisten lassen:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$info</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token variable\">$key</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">': '</span><span class=\"token operator\">.</span><span class=\"token variable\">$info</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;br />'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Die Ausgabe kann dann wie folgt aussehen:</p>\n<blockquote>\n<p>TMPDIR: /var/www/html/project.tld/temp/<br>\nPATH: /usr/local/bin:/usr/bin:/bin<br>\nPHPRC: /var/www/html/project.tld/conf/<br>\nPWD: /var/www/html/project.tld/php-fcgi<br>\nFCGI_ROLE: RESPONDER<br>\nUNIQUE_ID: Twgt2T5asdUAAHbGuiIAAACS<br>\nHTTP_HOST: project.tld<br>\nHTTP_USER_AGENT: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:9.0.1) Gecko/20100101 Firefox/9.0.1<br>\nHTTP_ACCEPT: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8<br>\nHTTP_ACCEPT_LANGUAGE: de-de,de;q=0.8,en-us;q=0.5,en;q=0.3<br>\nHTTP_ACCEPT_ENCODING: gzip, deflate<br>\nHTTP_ACCEPT_CHARSET: ISO-8859-1,utf-8;q=0.7,*;q=0.7<br>\nHTTP_COOKIE: PHPSESSID=2a03a4eec3as2b9a4afd692474c64c1e<br>\nHTTP_DNT: 1<br>\nHTTP_CONNECTION: close<br>\nSERVER_SIGNATURE:<br>\nSERVER_SOFTWARE: Apache/2.2.17<br>\nSERVER_NAME: project.tld<br>\nSERVER_ADDR: 1.1.1.1<br>\nSERVER_PORT: 80<br>\nREMOTE_ADDR: 2.2.2.2<br>\nDOCUMENT_ROOT: /var/www/html/project.tld/httpd<br>\nSERVER_ADMIN: <a href=\"mailto:admin@project.tld\" target=\"_blank\" rel=\"external noopener noreferrer\">admin@project.tld</a><br>\nSCRIPT_FILENAME: /var/www/html/project.tld/httpd/test.php<br>\nREMOTE_PORT: 50156<br>\nGATEWAY_INTERFACE: CGI/1.1<br>\nSERVER_PROTOCOL: HTTP/1.1<br>\nREQUEST_METHOD: GET<br>\nQUERY_STRING: test=test<br>\nREQUEST_URI: /test.php?test=test<br>\nSCRIPT_NAME: /test.php<br>\nPHP_SELF: /test.php<br>\nREQUEST_TIME: 1325936089</p>\n</blockquote>\n<p>$_SERVER enthält keinen Key für den Namen der aufgerufenen Datei selber. Wenn man darauf reagieren möchte, welche Datei einen bestimmten Code includiert hat, wird man mit dem Aufruf eines Keys von $_SERVER alleine erfolglos sein. Man kann die notwendige Information aber aus dem Key ‚SCRIPT_NAME‘ gewinnen:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// den Key 'SCRIPT_NAME' an den \"/\" trennen.</span>\n<span class=\"token variable\">$split</span><span class=\"token operator\">=</span><span class=\"token function\">preg_split</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\//\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SCRIPT_NAME'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token constant\">PREG_SPLIT_NO_EMPTY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Die Einträge des Arrays bestimmen und 1 abziehen, da bei den Array Keys bei 0 zu zählen begonnen wird</span>\n<span class=\"token variable\">$count</span><span class=\"token operator\">=</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$split</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Der Letzte Eintrag ist unsere Datei</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$split</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$count</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Wenn es die Datei x ist, 'Hello World' ausgeben, ansonsten den Dateinamen</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'x.php'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Hello World'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Ohne Kommentare und zusammengefasst sieht der Code dann so aus:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$split</span><span class=\"token operator\">=</span><span class=\"token function\">preg_split</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\//\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SCRIPT_NAME'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token constant\">PREG_SPLIT_NO_EMPTY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$split</span><span class=\"token punctuation\">[</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$split</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'x.php'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Hello World'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"aecdd6dc-1187-58dd-bf56-74ea7971c7b3","frontmatter":{"title":"Bestimmen der includierten Datei anhand von $_SERVER","date":"2012-01-07","tags":["php"]},"fields":{"slug":"/bestimmen-der-includierten-datei-anhand-von-_server/"},"timeToRead":2}},{"node":{"excerpt":"Möchte man als Hoster bei der ESL als zertifizierter Hoster geführt werden, muss er seinen Kunden ein Webinterface bereitstellen, dass den genannten Protection Mode unterstützt. beim…","html":"<p>Möchte man als Hoster bei der <a href=\"http://esl.eu\" target=\"_blank\" rel=\"external noopener noreferrer\">ESL</a> als zertifizierter Hoster geführt werden, muss er seinen Kunden ein Webinterface bereitstellen, dass den genannten <em>Protection Mode</em> unterstützt. beim Zulassungsverfahren wurde bisher eine PDF versandt, die nur recht Wage aufgelistet hat, welche Maßnahmen man ergreifen kann, damit der Server als sicher eingestuft wird. Das man hier keine genauen Vorschriften machen kann, was genau, auf welche Art umzusetzen ist, liegt in der Natur der Sache. Jedes Interface arbeitet anders. Das die Vorgabe sehr wage sind, kann man der ESL deswegen nicht vorwerfen. Es ist somit die Verantwortung der Webinterface Entwickler eine Lösung für ihren Spezialfall zu schaffen.</p>\n<p>Was hingegen teilweise auf die Kappe der ESL geht, ist der Umstand, dass sich über mögliche Angriffswege ausgeschwiegen wurde. Nicht jeder Coder kennt sich in den Eigenarten einzelner Gameserver aus, oder verfolgt die Diskussionen zu diesen. Wenn er sich nur auf die ESL verlässt und auf den Rat von Dritten verzichtet, wird er wichtige Dinge übersehen. Wenn er jedoch Hinweise Dritter bewusst übergeht, ist eine fehlerhafte Umsetzung alleinig ihm anzulasten.</p>\n<p>Da es bis heute keine zusammenfassende Auflistung über mögliche Angriffswege und Abwehrmaßnahmen gibt, habe ich nun im Rahmen meiner ehrenamtlichen Tätigkeit bei der ESL einen Vorschlag für eine Richtlinie erarbeitet und diese an die ESL weitergeleitet. Ob und in welcher Form mein Vorschlag übernommen wird, ist Sache der ESL.</p>\n<p>Auch unabhängig vom Protection Mode ist es sicherlich interessant, über welche Wege Kunden ihre Server anderes betreiben können, als vom Anbieter vorgesehen.</p>\n<p>Viele der Punkte gibt es schon seitdem es Gameserver gibt und sind versierten Anwendern ebenso lange bekannt. Dennoch werden sie leider immer wieder übersehen.</p>\n<p>Im folgenden nun mein Vorschlag einer Richtlinie für den Protection Mode</p>\n<h3>Ziel</h3>\n<p>Der Server, der unter der angegebenen Adresse (IP:Port) erreicht wird, darf außer den Servertools eslplugin und zblock keine weiteren Servertools geladen haben.</p>\n<h3>Angriffswege , die nicht funktionieren dürfen</h3>\n<h4>1. Upload in das geschütze Verzeichnis</h4>\n<p>Der User darf nicht in der Lage sein, Servertools in die Verzeichnisse des geschützen Server zu laden und von dort auszuführen.</p>\n<h4>2. plugin_load</h4>\n<p>Das Ausführen des Servercommands \"plugin_load\" muss verhindert werden. Dabei ist auch zu beachten, das die *.so Dateien des Servers manipuliert werden können, so dass der Befehl unter dem Beispielnamen \"plg1n_load\" läuft. Über das deaktivieren des Befehls hinaus, muss deswegen sicher gestellt sein, dass der Benutzer die *.so des Servers nicht verändern kann.</p>\n<h4>3. Änderung der ausführbaren Dateien</h4>\n<p>Mittels eines FTP Client und Editor können Änderungen an den Startskripten , ausgeführten Binaries und den *.so in den bin/ Ordern der Server gemacht werden. Des Weiteren kann man diese Änderungen auch mit Servertools wie Sourcemod und Eventscript herbeiführen.<br>\nDiese Veränderungen müssen sowohl beim geschützten, als auch ungeschützen Server entweder rückgängig, oder von vornherein verhindert werden.</p>\n<h4>4. (Reverse) Shells</h4>\n<p>Manche Servertools können Shells bereitstellen, mit denen man Prozesse vom Gameserverprozess losgelöst starten kann. Diese Prozesse müssen beim Start des Protected Modes beim normalen User beendet werden.</p>\n<h4>5. Folgen von Punkt 3 und 4</h4>\n<p>Ein nach den Punkt 3 oder 4 kompromitierter ungeschützter Server kann auch durch eine Firewall hindurch eine Reverse Shell aufbauen. Wenn diese beim Start des Protected Modes nicht erkannt wird, kann man die Adresse des geschützten Servers mit einem ungeschützten belegen.<br>\nEine Belegung der Adresse kann ebenso mit Endlosschleifen und Cronjobs erreicht werden.<br>\nEs müssen deswegen alle ungewollten Cronjobs und Prozesse beim Benutzer des ungeschützten Servers beendet werden, bevor der protected Server gestartet wird. Es darf nicht möglich sein, dass die Adresse voin einem anderen Prozess, als dem geschützten benutzt wird.</p>\n<h3>Mögliche Maßnahmen</h3>\n<p>Folgende Maßnahmen müssen nicht alle umgesetzt werden. Sie sind lediglich eine Liste von Dingen, mit denen man das Ziel erreichen kann.</p>\n<ol>\n<li>Strenge Chmods</li>\n<li>Zugriffseinschränkungen und Dateifilter am FTP Server</li>\n<li>Prozess und Port Kontrolle</li>\n<li>Verbieten des Befehls plugin_load</li>\n<li>Überprüfung kritischer Serverdateien vor jedem Serverstart sowohl im Protected Mode als auch im Unprotected Mode</li>\n<li>Ohne Differenzierung alle Prozesse des ungeschützten Users beim Start des Protection Modes killen</li>\n<li>Die Server mit unterschiedlichen Usern starten. Dabei sollte unter keinen Umständen ein User mit Root, oder Sudo Rechten den Prozesse ausführen.</li>\n<li>Für jeden Gameserverprozess ein eigenes Chroot</li>\n</ol>\n<h3>Zusätzlicher Hinweis</h3>\n<p>Es gibt keine wirksamen Maßnahmen gegen Shellplugins. Im Extremfall könnte dies ausgenutzt werden, um über veralterte Pakete oder Kernel Rootrechte erlangt werden. Es ist deswegen darauf zu achten, dass der Server nicht über bekannte Exploits von innen angreifbar ist.</p>","id":"33de969d-b75a-5083-b594-4fe4f5793e10","frontmatter":{"title":"Vorschlag einer genaueren Protection Mode Richtlinie der ESL","date":"2012-01-07","tags":["ESL","game-server","security"]},"fields":{"slug":"/vorschlag-einer-genaueren-protection-mode-richtlinie-der-esl/"},"timeToRead":3}},{"node":{"excerpt":"Die Dateifunktionen zum Löschen von Ordnern und Dateien sind bei PHP sehr limitiert. unlink(); kann eine Datei und rmdir(); einen Ordner löschen. Die Möglichkeit des rekursiven Löschens ist nicht…","html":"<p>Die Dateifunktionen zum Löschen von Ordnern und Dateien sind bei PHP sehr limitiert. <strong>unlink();</strong> kann eine Datei und <strong>rmdir();</strong> einen Ordner löschen. Die Möglichkeit des rekursiven Löschens ist nicht gegeben. Des Weiteren kann man Ordner nur dann löschen, wenn diese bereits leer sind.<br>\nEin <strong>rm -r</strong>, wie auf der Linux Shell ist somit nicht möglich.</p>\n<p>Man könnte nun mit <strong>exec();</strong> arbeiten. Diese Funktion wird aber von vielen Hostern als Sicherheitsrisiko eingestuft. Deswegen ist sie zu Recht deaktiviert. Wenn die Funktion zugelassen ist, kann man mit PHP <strong>rm -r</strong> aufrufen:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"rm -r /Absoluter/Pfad/Zum/löschenden/Ordner/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Wenn die <strong>exec();</strong> Funktion nicht zur Verfügung steht, kommt man nicht darum herum eine Funktion zu schreiben, die die Funktionsweise von <strong>rm -r</strong> nachbildet.<br>\nDie eigene Funktion muss den Ordnerinhalt auflisten und für jedes Element der Liste überprüfen können, ob es sich um eine Datei, oder einen Ordner handelt. Wenn es sich um eine Datei handelt, soll die Datei mit der PHP Funktion <strong>unlink();</strong> gelöscht werden. Wenn es sich um einen Ordner handelt, sollte die Funktion sich selber so lange selber aufrufen, bis sie in keinen weiteren Unterordner herabsteigen und dabei die Dateien aus den Unterordnern löschen kann.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">rmr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Wenn der Input ein Ordner ist, dann Überprüfung des Inhaltes beginnen</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Ordnerinhalt auflisten und jedes Element nacheinander überprüfen</span>\n\t\t<span class=\"token variable\">$dircontent</span><span class=\"token operator\">=</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$dircontent</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// Wenn es sich um einen Ordner handelt, die Funktion rmr(); aufrufen</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">'.'</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$c</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">'..'</span> <span class=\"token keyword\">and</span> <span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">rmr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// Wenn es eine Datei ist, diese löschen</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">'.'</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$c</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">'..'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">// Den nun leeren Ordner löschen</span>\n\t\t<span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// Wenn es sich um eine Datei handelt, diese löschen</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Aufrufen der Funktion</span>\n<span class=\"token function\">rmr</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Zu/Löschender/Ordner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"ee99c627-a969-56ee-9b2f-392e048509af","frontmatter":{"title":"Rekursives löschen, oder rm -r mit PHP","date":"2012-01-02","tags":["php"]},"fields":{"slug":"/rekursives-loschen-oder-rm-r-mit-php/"},"timeToRead":1}},{"node":{"excerpt":"Ich wünsche allen Lesern ein frohes neues Jahr. Zum neuen Jahr möchte ich euch ein kleines PHP Skript zur Verfügung stellen, mit dem man ein Zip Archiv rekursiv auf dem Webspace entpacken kann.","html":"<p>Ich wünsche allen Lesern ein frohes neues Jahr.</p>\n<p>Zum neuen Jahr möchte ich euch ein kleines PHP Skript zur Verfügung stellen, mit dem man ein Zip Archiv rekursiv auf dem Webspace entpacken kann.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$zielordner</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'entpacken/'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$archivname</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'archiv.zip'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$zo</span><span class=\"token operator\">=</span>@<span class=\"token function\">zip_open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$archivname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Wenn das Archiv geöffnet werden konnte, weitermachen</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_resource</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Den Inhalt in einer While Schleife durchgehen</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ze</span><span class=\"token operator\">=</span><span class=\"token function\">zip_read</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Den Namen von der Datei, oder Ordner bestimmen.</span>\n\t\t<span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token function\">zip_entry_name</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ze</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// Den Eintrag öffnen und mittels Regex überprüfen, ob es sich um eine Datei handelt.</span>\n\t\t<span class=\"token variable\">$zeo</span><span class=\"token operator\">=</span><span class=\"token function\">zip_entry_open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zo</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ze</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^(.*)\\.[\\w]{1,}$/'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// Den Ordner, bzw. die Unterordner bestimmen, in dem sich die Datei befindet</span>\n\t\t\t<span class=\"token variable\">$folders</span><span class=\"token operator\">=</span><span class=\"token function\">preg_split</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\//'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token constant\">PREG_SPLIT_NO_EMPTY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token variable\">$count</span><span class=\"token operator\">=</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$folders</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$checkfolder</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span> <span class=\"token variable\">$count</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$checkfolder</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token variable\">$checkfolder</span> <span class=\"token operator\">.=</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$folders</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token variable\">$checkfolder</span><span class=\"token operator\">=</span><span class=\"token variable\">$folders</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token comment\">// Wenn es sich um einen Unterordner handelt und er nicht existiert, diesen erstellen.</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$checkfolder</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$checkfolder</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">!</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zielordner</span><span class=\"token operator\">.</span><span class=\"token variable\">$checkfolder</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">!</span><span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zielordner</span><span class=\"token operator\">.</span><span class=\"token variable\">$checkfolder</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t@<span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zielordner</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">// Falls der Regex ergibt, dass es sich um einen Ordner handeln muss, überprüfen, ob er existiert und gegebenen Falls erstellen</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zielordner</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t@<span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zielordner</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">// Wenn es sich um eine Datei handelt, einen File Handler für die zu entpackende Datei öffnen und den Inhalt der gepackten Datei in diesen Handler Schreiben</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^(.*)\\.[\\w]{1,}$/'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$zeo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// File Handler öffnen</span>\n\t\t\t<span class=\"token variable\">$nf</span><span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zielordner</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// Dateigröße bestimmen</span>\n\t\t\t<span class=\"token variable\">$fz</span><span class=\"token operator\">=</span><span class=\"token function\">zip_entry_filesize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ze</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// Den Inhalt der gepackten Datei in den Handler schreiben</span>\n\t\t\t<span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$nf</span><span class=\"token punctuation\">,</span><span class=\"token function\">zip_entry_read</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ze</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$fz</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$fz</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// Handler schließen</span>\n\t\t\t<span class=\"token function\">zip_entry_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ze</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$nf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// Archiv schließen</span>\n\t<span class=\"token function\">zip_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"321b37c5-e743-56bd-b301-e0988b45ef01","frontmatter":{"title":"Zip Archiv mit PHP rekursiv entacken","date":"2012-01-01","tags":["php"]},"fields":{"slug":"/zip-archiv-mit-php-rekursiv-entacken/"},"timeToRead":1}},{"node":{"excerpt":"Manch einer möchte seine SourceTV Demos automatisiert komprimieren und auf einen externen Webspace hochladen. Wenn man Zugriff auf die Shell hat, kann man dies mit einem kleinen Bashscript machen. Der…","html":"<p>Manch einer möchte seine SourceTV Demos automatisiert komprimieren und auf einen externen Webspace hochladen. Wenn man Zugriff auf die Shell hat, kann man dies mit einem kleinen Bashscript machen.</p>\n<p>Der folgende Code ist sicherlich nicht der performanteste, erfüllt jedoch seinen Zweck. Für einzelne Gameserver mag es hilfreich sein. Ein komplettes System würde ich darauf aber nicht aufzubauen wollen.</p>\n<p>Wenn man die Demos auch auf dem Gameserver archivieren möchte, muss man den zusätzlichen Parameter <strong>-k</strong> bei bzip2 verwenden. Er steht für <strong>keep</strong> und weist bzip2 an, die Ausgangsdatei nicht zu entfernen.</p>\n<p>Hier nun das kleine Bashscript:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token assign-left variable\">DIR</span><span class=\"token operator\">=</span><span class=\"token string\">'/home/username/servername/css'</span>\n<span class=\"token assign-left variable\">DEMODIR</span><span class=\"token operator\">=</span><span class=\"token string\">'cstrike'</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$DIR</span>/<span class=\"token variable\">$DEMODIR</span>\n<span class=\"token function\">tail</span> -f <span class=\"token variable\">$DIR</span>/screenlog.0 <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> line<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">echo</span> $line <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'Completed SourceTV demo'</span><span class=\"token variable\">`</span></span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token assign-left variable\">DEMONAME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">echo</span> -n <span class=\"token string\">\"<span class=\"token variable\">$line</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $4}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> -d <span class=\"token string\">'\"'</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> -d <span class=\"token string\">','</span><span class=\"token variable\">`</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">lsof</span> $DEMONAME<span class=\"token variable\">`</span></span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n   <span class=\"token function\">nice</span> -n +19 <span class=\"token function\">bzip2</span> -s -q -9 <span class=\"token variable\">$DEMONAME</span>\n   wput --remove-source-files <span class=\"token variable\">$DEMONAME</span>.bz2 ftp://user:password@1.1.1.1/demos/\n  <span class=\"token keyword\">fi</span>\n <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"a062590a-e159-5060-84e0-03c0a1d714ef","frontmatter":{"title":"SourceTV Demo Uploader","date":"2011-12-31","tags":["steam","game-server","SourceTV","bash"]},"fields":{"slug":"/sourcetv-demouploader/"},"timeToRead":1}},{"node":{"excerpt":"Hier mal eine, in PHP geschriebene, Statusabfrage für den GTA San Andreas Server:","html":"<p>Hier mal eine, in PHP geschriebene, Statusabfrage für den GTA San Andreas Server:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$ip</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'1.1.1.1'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$port</span><span class=\"token operator\">=</span><span class=\"token number\">7777</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$socket</span><span class=\"token operator\">=</span> @<span class=\"token function\">fsockopen</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"udp://\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$ip</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$port</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$errnum</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$errstr</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token operator\">==</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token variable\">$ex</span><span class=\"token operator\">=</span><span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$packet</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'SAMP'</span><span class=\"token operator\">.</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ex</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ex</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ex</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ex</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$port</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$port</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'i'</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$packet</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$return</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$return</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'player'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$return</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'slots'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$return</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'hostname'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$return</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'mode'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token variable\">$return</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'map'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n <span class=\"token variable\">$return</span><span class=\"token operator\">=</span><span class=\"token variable\">$errnum</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">': '</span><span class=\"token operator\">.</span><span class=\"token variable\">$errstr</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_resource</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$socket</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"30e2f0c0-e158-5c38-a9f0-d97f6da13af5","frontmatter":{"title":"GTA San Andreas Server Query","date":"2011-12-29","tags":["php","game-server"]},"fields":{"slug":"/gta-san-andreas-server-query/"},"timeToRead":1}},{"node":{"excerpt":"Ich nutze seit kurzem den TSDNS Server, der mit der Teamspeak 3 Serversoftware mitgeliefert wird. Dabei gehe ich so vor, dass ich als TSDNS Adressen Subdmains zu der Subdomain ts.domain.tld verwende…","html":"<p>Ich nutze seit kurzem den TSDNS Server, der mit der Teamspeak 3 Serversoftware mitgeliefert wird. Dabei gehe ich so vor, dass ich als TSDNS Adressen Subdmains zu der Subdomain <em>ts.domain.tld</em> verwende.<br>\nEin entsprechender A Record <em>*.ts.domain.tld A 1.1.1.1</em> mit einer Wildcard wurde angelegt.</p>\n<p>Außer TSDNS soll nichts Domain bezogenes auf diesem Server laufen. Der Hostname und ein Reserve DNS Eintrag wurde deswegen nicht auf <em>ts.domain.tld</em> eingestellt. Weil diese Subdomain nicht in Gebrauch ist, wurde kein A Record zu <em>ts.domain.tld</em> erstellt.</p>\n<p>Nach dem Konfigurieren der <em>tsdns_settings.ini</em> wurde dann noch der TSDNS Server geupdatet.</p>\n<p>In der Theorie sollte nun alles gehen. Nicht so in der Praxis. Ein Ping bzw. Tracert auf eine Subdomain zur Subdomain landet bei der richtigen IP. Beim Verbinden mit dem Teamspeak 3 Client gibt es aber Probleme. Egal welche Subdomain man benutzt, man landet immer auf dem virtuellen Teamspeak 3 Server dieser IP, der auf dem Standardport betrieben wird.</p>\n<p>Sobald man einen A Record für die nicht verwendete Subdomain <em>ts.domain.tld</em> erstellt und die Änderung übernommen wurde, stoppt dieses Verhalten. Ab diesem Zeitpunkt ist es dann möglich, auf den virtuellen Teamspeak 3 Server zu verbinden, der in der <em>tsdns_settings.ini</em> angegeben wurde.</p>","id":"d1fe061b-911d-5724-9b05-4d99674ed9ff","frontmatter":{"title":"Sonderbares Verhalten des TSDNS Servers","date":"2011-12-22","tags":["Teamspeak 3"]},"fields":{"slug":"/sonderbares-verhalten-des-tsdns-servers/"},"timeToRead":1}},{"node":{"excerpt":"Der Valve Mitarbeiter Fletcher Dunn hat vor kurzem ein Statement zu der Verwendung von verschiedenen Methoden, die die Serverstatusanzeige verändern, über die [hlds_linux] Mailingliste gemacht. Die…","html":"<p>Der Valve Mitarbeiter Fletcher Dunn hat vor kurzem ein Statement zu der Verwendung von verschiedenen Methoden, die die Serverstatusanzeige verändern, über die <a href=\"http://www.mail-archive.com/hlds_linux@list.valvesoftware.com/msg65348.html\" target=\"_blank\" rel=\"external noopener noreferrer\">[hlds_linux] Mailingliste</a> gemacht.<br>\nDie betroffenen Maßnahmen haben alle das Ziel, Spieler auf den Server zu locken, die ansonsten nicht connected hätten. Hauptsächlich geht es Valve um Folgendes:</p>\n<p><strong>Fake Clients</strong> werden dem Gameserver Bots hinzugefügt und täuschen vor, dass diese Menschliche Spieler seien.</p>\n<p>Eine andere Methode um die Beliebtheit seines Servers zu steigern ist es, den Server <strong>mehrfach unter unterschiedlichen Adressen in den Serverbrowser</strong> zu bringen. Egal auf welche der Adressen man verbindet, man landet immer auf dem gleichen Gameserver.</p>\n<p>Des Weiteren unterdrücken manche Serverbetreiber <strong>Informationen, die zeigen, das der Server modifiziert wurde</strong>. Sie werden unterdrückt, weil sie ein niedrigeres Serverranking zur Folge haben. Die Folge davon sind weniger Spieler.</p>\n<p>Diese Art von Modifikationen werden von Valve als sehr schädlich für die Community angesehen. Deswegen wird Valve im ersten Schritt Kontakt mit Serverbetreibern suchen, um ihnen eine Chance zu geben, das Verhalten einzustellen.<br>\nZu einem späteren, bisher nicht bekannten Zeitpunkt, wird dieses Vorgehen dann verschärft werden. Die genauen Konsequenzen werden zwar nicht genannt. Ich gehe davon aus, dass Valve irgendwann damit beginnen wird, die Server von Unbelehrbaren aus dem Serverbrowser zu nehmen.</p>\n<p>Die Nutzer dieser Methoden sollten sich also vorsehen und ihre Strategie ändern. Wer möchte schon, dass sein Server über Kurz, oder Lang aus der Serverliste entfernt wird.</p>","id":"d217d1c1-1326-5a0b-8374-9d452d00cbd7","frontmatter":{"title":"Die Zukunft von Fake Clients und ähnlichen","date":"2011-12-20","tags":["steam","game-server"]},"fields":{"slug":"/die-zukunft-von-fake-clients-und-ahnlichen/"},"timeToRead":1}},{"node":{"excerpt":"Es wurde in letzter Zeit viel berichtet, dass Geheimdienste auf Daten, die in der Cloud gespeichert sind, zugreifen können. Dies kann man z.B. in einem aktuellen Beitrag von Golem lesen. Heise…","html":"<p>Es wurde in letzter Zeit viel berichtet, dass Geheimdienste auf Daten, die in der Cloud gespeichert sind, zugreifen können. Dies kann man z.B. in einem <a href=\"http://www.golem.de/1112/88467.html\" target=\"_blank\" rel=\"external noopener noreferrer\">aktuellen Beitrag von Golem</a> lesen.</p>\n<p><a href=\"http://www.heise.de/newsticker/meldung/Windows-8-speichert-Passwoerter-in-der-Cloud-1396911.html\" target=\"_blank\" rel=\"external noopener noreferrer\">Heise</a> berichtet so eben, dass Windows 8 die Zugangsdaten in der Cloud speichern wird.</p>\n<p>Wer braucht denn noch Staatstrojaner, wenn er direkt auf Daten zugreifen kann…</p>","id":"301c5ff0-ce06-563a-b975-c006beadb50c","frontmatter":{"title":"Wozu noch Staatstrojaner?","date":"2011-12-16","tags":[]},"fields":{"slug":"/wozu-noch-staatstrojaner/"},"timeToRead":1}}]}},"pageContext":{"currentPage":11,"limit":10,"numPages":29,"skip":100}},"staticQueryHashes":["1134651766","2457448410","258428790","551055924"]}