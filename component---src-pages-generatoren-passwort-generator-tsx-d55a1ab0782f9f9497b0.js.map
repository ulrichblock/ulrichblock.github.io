{"version":3,"file":"component---src-pages-generatoren-passwort-generator-tsx-d55a1ab0782f9f9497b0.js","mappings":"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","sources":["webpack://ulrich-block/./src/components/generators/passwords/chars.ts","webpack://ulrich-block/./src/components/generators/passwords/GeneratePasswords.tsx","webpack://ulrich-block/./src/pages/generatoren/passwort-generator.tsx"],"sourcesContent":["const SMALL = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z'\n]\n\nconst LARGE = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z'\n]\n\nconst NUMERIC = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n\nconst ZERO = ['0']\n\nconst SPECIAL_CHARS = [\n  '!',\n  '\"',\n  'ยง',\n  '$',\n  '%',\n  '&',\n  '/',\n  '(',\n  ')',\n  '=',\n  '?',\n  '+',\n  '*',\n  '#',\n  ',',\n  ';',\n  '.',\n  ':',\n  '-',\n  '_'\n]\n\nexport const CHARS = {\n  large: LARGE,\n  numeric: NUMERIC,\n  small: SMALL,\n  specialChars: SPECIAL_CHARS,\n  zero: ZERO\n}\n","import Button from 'react-bootstrap/Button'\nimport { CHARS } from './chars'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport React from 'react'\nimport Row from 'react-bootstrap/Row'\n\nexport class GeneratePasswords extends React.Component {\n  private _timeout: ReturnType<typeof setTimeout> | undefined\n\n  public render(): JSX.Element {\n    return (\n      <Form>\n        <Form.Group as={Row} controlId=\"length\">\n          <Form.Label column sm={4}>\n            Passwortl&auml;nge\n          </Form.Label>\n          <Col sm={8}>\n            <Form.Control type=\"number\" size=\"sm\" min={8} max={100} defaultValue={16} onChange={this._onChange} />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"length\">\n          <Form.Label column sm={4}>\n            Anzahl der zu generierenden Passw&ouml;rter\n          </Form.Label>\n          <Col sm={8}>\n            <Form.Control type=\"number\" size=\"sm\" min={1} max={10} defaultValue={4} onChange={this._onChange} />\n          </Col>\n        </Form.Group>\n\n        <fieldset className=\"form-group\">\n          <Row>\n            <Form.Label as=\"legend\" column sm={4}>\n              Parameter\n            </Form.Label>\n            <Col sm={8}>\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Kleinbuchstaben\"\n                id=\"small\"\n                onChange={this._generateSetPasswords}\n                defaultChecked={true}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Gro&szlig;buchstaben\"\n                id=\"large\"\n                onChange={this._generateSetPasswords}\n                defaultChecked={true}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Zahlen (1-9)\"\n                id=\"numeric\"\n                onChange={this._generateSetPasswords}\n                defaultChecked={true}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Null (0)\"\n                id=\"zero\"\n                onChange={this._generateSetPasswords}\n                defaultChecked={true}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Sonderzeichen\"\n                id=\"sonder\"\n                onChange={this._generateSetPasswords}\n                defaultChecked={true}\n              />\n            </Col>\n          </Row>\n        </fieldset>\n\n        <Form.Group as={Row} controlId=\"passwords\">\n          <Col>\n            <Form.Control as=\"textarea\" rows={10} />\n          </Col>\n        </Form.Group>\n\n        <Form.Row className=\"float-right\">\n          <Button variant=\"primary\" type=\"button\" onClick={this._onClick}>\n            Passw&ouml;rter erstellen\n          </Button>\n        </Form.Row>\n      </Form>\n    )\n  }\n\n  private _onClick = (): boolean => {\n    this._generateSetPasswords()\n    return false\n  }\n\n  private _onChange = (): void => {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n      this._timeout = undefined\n    }\n\n    this._timeout = setTimeout(this._generateSetPasswords, 1000)\n  }\n\n  private _generateSetPasswords = (): void => {\n    const passwordText = document.getElementById('passwords') as HTMLTextAreaElement\n\n    if (!passwordText) {\n      return\n    }\n\n    const passwords: string[] = []\n    const amount = this._getAmount()\n    const chars = this._getChars()\n    const length = this._getLength()\n\n    for (let i = 0; i < amount; i++) {\n      passwords.push(this._generatePassword(chars, length))\n    }\n\n    passwordText.value = passwords.join('\\n')\n  }\n\n  private _getAmount(): number {\n    return this._getNumeric('amount', 10, 4)\n  }\n\n  private _random(max: number): number {\n    return Math.floor(Math.random() * Math.floor(max))\n  }\n\n  private _getChars(): string[] {\n    let chars: string[] = []\n\n    if (this._isChecked('small')) {\n      chars = chars.concat(CHARS.small)\n    }\n\n    if (this._isChecked('large')) {\n      chars = chars.concat(CHARS.large)\n    }\n\n    if (this._isChecked('numeric')) {\n      chars = chars.concat(CHARS.numeric)\n    }\n\n    if (this._isChecked('zero')) {\n      chars = chars.concat(CHARS.zero)\n    }\n\n    if (this._isChecked('sonder')) {\n      chars = chars.concat(CHARS.specialChars)\n    }\n\n    return chars\n  }\n\n  private _isChecked(id: string): boolean {\n    const element = document.getElementById(id) as HTMLInputElement\n\n    return element ? element.checked : true\n  }\n\n  private _getLength(): number {\n    return this._getNumeric('length', 100, 16)\n  }\n\n  private _getNumeric(id: string, max: number, fallback: number): number {\n    const element = document.getElementById(id)\n\n    if (!element) {\n      return fallback\n    }\n\n    const value = Number((element as HTMLInputElement).value)\n\n    return !value || value > max ? fallback : value\n  }\n\n  private _generatePassword(chars: string[], length: number): string {\n    const password: string[] = []\n\n    for (let i = 0; i < length; i++) {\n      password.push(chars[this._random(chars.length)])\n    }\n\n    return password.join('')\n  }\n}\n","import Col from 'react-bootstrap/Col'\nimport { GeneratePasswords } from '../../components/generators/passwords/GeneratePasswords'\nimport { Layout } from '../../components/Layout'\nimport React from 'react'\nimport { SEO } from '../../components/SEO'\nimport { Sidebar } from '../../components/sidebar/Sidebar'\n\nconst PasswortGenerator = (): JSX.Element => (\n  <Layout>\n    <SEO title=\"Passwort Generator\" />\n    <Col md={8}>\n      <h2 className=\"mb-4 font-italic border-bottom\">Passwort Generator</h2>\n      <GeneratePasswords />\n    </Col>\n    <Sidebar />\n  </Layout>\n)\n\nexport default PasswortGenerator\n"],"names":["CHARS","GeneratePasswords","_onClick","_generateSetPasswords","_onChange","_timeout","clearTimeout","undefined","setTimeout","passwordText","document","getElementById","passwords","amount","_getAmount","chars","_getChars","length","_getLength","i","push","_generatePassword","value","join","render","Form","as","Row","controlId","column","sm","Col","type","size","min","max","defaultValue","onChange","this","className","label","id","defaultChecked","rows","Button","variant","onClick","_getNumeric","_random","Math","floor","random","_isChecked","concat","element","checked","fallback","Number","password","React","Layout","SEO","title","md","Sidebar"],"sourceRoot":""}