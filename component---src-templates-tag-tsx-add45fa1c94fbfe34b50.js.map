{"version":3,"file":"component---src-templates-tag-tsx-add45fa1c94fbfe34b50.js","mappings":"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","sources":["webpack://ulrich-block/./node_modules/react-bootstrap/esm/Col.js","webpack://ulrich-block/./src/components/tags/TechTags.tsx","webpack://ulrich-block/./src/lib/utils.ts","webpack://ulrich-block/./src/templates/tag.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import { ILabels } from '../../types'\nimport React from 'react'\nimport { TechTag } from './TechTag'\nimport { kebabCase } from '../../lib/utils'\n\nexport function getTechTags(allTags: ILabels[], usedTags?: string[], noFilter = false): JSX.Element[] {\n  if (!Array.isArray(usedTags)) {\n    return []\n  }\n\n  const techTags: JSX.Element[] = []\n\n  for (let i = 0; i < usedTags.length; i++) {\n    const definedTag = allTags.find(({ tag }: ILabels): boolean => tag === usedTags[i])\n\n    if (definedTag) {\n      techTags.push(\n        <TechTag\n          key={i}\n          tag={definedTag.tag}\n          tech={definedTag.tech}\n          name={definedTag.name}\n          size={definedTag.size}\n          color={definedTag.color}\n          viewBox={definedTag.viewBox}\n        />\n      )\n    } else if (noFilter) {\n      techTags.push(\n        <TechTag\n          key={i}\n          tag={kebabCase(usedTags[i])}\n          tech={usedTags[i]}\n          name=\"\"\n          size={20}\n          color=\"white\"\n          viewBox=\"10 20 199 199\"\n        />\n      )\n    }\n  }\n\n  return techTags\n}\n","export function kebabCase(value: string): string {\n  return Array.from(value.toLowerCase().matchAll(/([a-z0-9]+)/g))\n    .map(([, part] = ['', '']): string => part)\n    .join('-')\n}\n","import { Link, PageProps, graphql } from 'gatsby'\nimport Col from 'react-bootstrap/Col'\nimport { IData } from '../types'\nimport { Layout } from '../components/Layout'\nimport React from 'react'\nimport { SEO } from '../components/SEO'\nimport { Sidebar } from '../components/sidebar/Sidebar'\nimport { getTechTags } from '../components/tags/TechTags'\n\ninterface IPageContext {\n  tag: string\n}\n\ntype TagProps = PageProps<IData, IPageContext>\n\nconst Tag = ({ pageContext, data }: TagProps): JSX.Element => {\n  const posts = data.allMarkdownRemark.edges\n  const { tag } = pageContext\n  const { totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <SEO title=\"Tech Tags\" />\n      <Col md={8}>\n        <h2 className=\"mb-4 font-italic border-bottom\">{tagHeader}</h2>\n\n        {posts.map(post => {\n          return (\n            <div key={post.node.id} className=\"container mt-5\">\n              <Link to={post.node.fields.slug} className=\"text-dark\">\n                <h3>{post.node.frontmatter.title}</h3>\n              </Link>\n              <small className=\"d-block text-info\">\n                Erstellt am {post.node.frontmatter.date} | Lesedauer: {post.node.timeToRead} Minute(n)\n              </small>\n              <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n              <Link to={post.node.fields.slug} className=\"text-primary\">\n                <small className=\"d-inline-block ml-3\"> Vollst√§ndigen Post lesen</small>\n              </Link>\n              <div className=\"d-block\">{getTechTags(data.site.siteMetadata.labels, post.node.frontmatter.tags)}</div>\n            </div>\n          )\n        })}\n      </Col>\n      <Sidebar />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    site {\n      siteMetadata {\n        title\n        author\n        labels {\n          tag\n          tech\n          name\n          size\n          color\n          viewBox\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, published: { eq: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          html\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n          }\n          fields {\n            slug\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default Tag\n"],"names":["_excluded","DEVICE_SIZES","Col","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","prefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","concat","displayName","getTechTags","allTags","usedTags","noFilter","Array","isArray","techTags","i","value","definedTag","find","tag","TechTag","key","tech","name","size","color","viewBox","from","toLowerCase","matchAll","map","join","pageContext","data","posts","allMarkdownRemark","edges","totalCount","tagHeader","title","md","post","node","id","to","fields","slug","frontmatter","date","timeToRead","excerpt","site","siteMetadata","labels","tags"],"sourceRoot":""}